<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Colors-->
    <Color x:Key="ColorPrimary1">#799540</Color>
    <Color x:Key="ColorPrimary2">#50632b</Color>

    <!--Brushes-->
    <SolidColorBrush x:Key="BrushPrimary1" Color="{StaticResource ColorPrimary1}"/>
    <SolidColorBrush x:Key="BrushPrimary2" Color="{StaticResource ColorPrimary2}"/>

    <!--Text Boxes-->
    <Style x:Key="TextBoxBase" TargetType="Control">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border BorderThickness="1" BorderBrush="Gray" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBase}"/>
    <Style TargetType="PasswordBox" BasedOn="{StaticResource TextBoxBase}"/>

    <!--Buttons-->
    <Style TargetType="Button">
        <Setter Property="Background" Value="#ACC8F1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#6495ED"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#ACC8F1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="100" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}" BorderThickness="3" BorderBrush="Black">
                        <ContentPresenter Margin="10"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#6495ED"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Radio Button-->
    <Style x:Key="NavRadiobuttonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="gray" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="5" />
                        </Grid.RowDefinitions>

                        <Border  Grid.Row="0" Background="{TemplateBinding Background}" Padding="20">
                            <ContentPresenter />
                        </Border>
                        <Rectangle x:Name="VerticalIndicator" Grid.Row="1" VerticalAlignment="Bottom" Height="5" Fill="#4B2000" Visibility="Visible"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#7B7B7B" />
                <Setter Property="Foreground" Value="#aaaaaa" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#373A40" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="5" />
                                </Grid.RowDefinitions>

                                <Border  Grid.Row="0" Background="{TemplateBinding Background}"  Padding="20">
                                    <ContentPresenter />
                                </Border>
                                <Rectangle x:Name="VerticalIndicator" Grid.Row="1" VerticalAlignment="Bottom" Height="5" Fill="#DC5F00" Visibility="Visible"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="#242424" />
                <Setter Property="Foreground" Value="#aaaaaa" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NavButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="gray"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="145"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="5" />
                        </Grid.RowDefinitions>

                        <Border CornerRadius="0" Margin="0" Padding="10"  HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter />
                        </Border>
                        <Rectangle x:Name="VerticalIndicator" Grid.Row="1" VerticalAlignment="Bottom" Height="5" Fill="#4B2000" Visibility="Visible"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#7B7B7B"/>
                <Setter Property="Foreground" Value="#aaaaaa" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DataGrid-->
    <Style TargetType="DataGrid">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Background" Value="#242424"/>
        <!--<Setter Property="MaxColumnWidth" Value="300"/>-->
        <!-- <Setter Property="ColumnWidth" Value="*"/> -->
        <Setter Property="RowHeight" Value="30"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#3F3F3F"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border Margin="1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="3"/>
                            </Grid.RowDefinitions>
                            <Border Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter />
                            </Border>
                            <Rectangle Grid.Row="1" Margin="0 1 0 0 " VerticalAlignment="Bottom" Height="2" Fill="White" Visibility="Visible"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="DataGridCell">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#AAAAAA"/>
        <Setter Property="Background" Value="#242424"/>
        <Setter Property="ComboBox.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="CellBorder" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditing" Value="True">
                            <Setter TargetName="CellBorder" Property="BorderBrush" Value="Red"/>
                            <Setter TargetName="CellBorder" Property="Background" Value="Red"/>
                            <Setter TargetName="CellBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEditing" Value="False">
                            <Setter TargetName="CellBorder" Property="BorderThickness" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#7160E8"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--GroupBox-->
    <Style TargetType="GroupBox" x:Key="StGBRoundButtonGB">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border Grid.Row="0">
                        <Grid>
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Top"
                                              Margin="0" TextBlock.FontWeight="Bold" TextBlock.Foreground="Orange"
                                              TextBlock.FontSize="15" HorizontalAlignment="Center"/>
                            <ContentPresenter Grid.Row="1" Margin="0 5 0 5" TextBlock.FontSize="24"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox" x:Key="StGBMonitor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border Grid.Row="0" Background="#3a2d49" CornerRadius="5" Padding="5">
                        <Grid Margin="5 5 5 0">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="False" VerticalAlignment="Top"
                                                  Margin="10 0" TextBlock.FontWeight="Bold" TextBlock.Foreground="#bbbbbb"
                                                  TextBlock.FontSize="13"/>
                            <ContentPresenter Grid.Row="1" Margin="100 5 0 5" TextBlock.FontSize="24"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <!-- Custom ComboBox Style -->
    <Style TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton is the ComboBox dropdown button -->
                        <ToggleButton Name="ToggleButton"
                                          Background="#505050"
                                          Foreground="Orange"
                                          BorderBrush="DarkGray"
                                          Grid.Column="2"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          HorizontalContentAlignment="Right">
                            <Path HorizontalAlignment="Center"
                                  Margin="0,0,5,0"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="Orange" />
                        </ToggleButton>

                        <!-- ContentPresenter shows the selected item -->
                        <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>

                        <!-- Popup for showing dropdown items -->
                        <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Name="DropDownBorder"
                                            Background="#505050"
                                            BorderBrush="DarkGray"
                                            BorderThickness="1">
                                    <ScrollViewer Margin="4,6,4,6"
                                                      SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>

                    <!-- Visual States -->
                    <ControlTemplate.Triggers>
                        <!-- Focused state -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="ToggleButton" Property="Background" Value="#808080" />
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="#808080" />
                        </Trigger>

                        <!-- Dropdown open state -->
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="ToggleButton" Property="Background" Value="#808080" />
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="#808080" />
                        </Trigger>

                        <!-- Mouse over state -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButton" Property="Background" Value="#808080" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- ComboBox Background and Foreground colors -->
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Orange" />
    </Style>

    <!-- Custom ComboBoxItem Style -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#404040" />
        <Setter Property="Foreground" Value="Orange" />
        <Setter Property="Padding" Value="5" />

        <Style.Triggers>
            <!-- Highlight the item when it is selected -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="LightCoral" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>

            <!-- Change background color when the mouse is over an item -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer  -->
    <Style TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <!-- Content Presenter -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- ScrollViewer Content -->
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Grid.Row="0" 
                                                    Grid.Column="0"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Content="{TemplateBinding Content}"
                                                    Margin="0" />

                        <!-- Vertical ScrollBar -->
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Row="0"
                                       Grid.Column="1"
                                       Orientation="Vertical"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Width="12" 
                                       BorderThickness="1">
                        </ScrollBar>

                        <!-- Horizontal ScrollBar -->
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Orientation="Horizontal"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Height="12"
                                       BorderThickness="1">
                        </ScrollBar>

                        <!-- Corner when both scrollbars are visible -->
                        <Rectangle Grid.Row="1" Grid.Column="1" Fill="Gray" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Thumb 색상을 변경하는 Style -->
    <Style TargetType="ScrollBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <RepeatButton Grid.Row="0" 
                                      Command="ScrollBar.LineUpCommand"
                                      Content="▲"
                                      Height="20" 
                                      Background="#505050"/>
                        <Track Name="PART_Track"  Grid.Row="1" IsDirectionReversed="True">
                            <!-- Thumb 스타일: 색상 변경 -->
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Blue"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Background" Value="LightBlue"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>

                        <!-- ScrollBar 아래쪽 버튼 -->
                        <RepeatButton Grid.Row="2" 
                                      Command="ScrollBar.LineDownCommand"
                                      Content="▼"
                                      Height="20" 
                                      Background="#505050"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>